# Copyright 2020 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

appName=ers-submissions

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform backend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"

play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.MicroserviceFilters"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

#play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoPlugin"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="xh5rc0jtEHxeIv3A84CibewmhmpQxpq78OkxYAXeTB6metPMwClzQk7s3gTL3sqN"

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
application.langs="en"

ers-submissions-timeout-seconds = 70

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router=prod.Routes

play.http.parser.maxMemoryBuffer=10M

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and 
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule. 

controllers {

    com.kenshoo.play.metrics.MetricsController = {
      needsLogging = false
      needsAuditing = false
    }

    controllers.ReceivePresubmissionController = {
      needsLogging = true
      needsAuditing = false
    }

    controllers.PresubmissionController = {
      needsLogging = true
      needsAuditing = false
    }

    controllers.SubmissionController = {
        needsLogging = true
        needsAuditing = true
    }

    controllers.ResubmissionController = {
      needsLogging = true
      needsAuditing = false
    }
    uk.gov.hmrc.play.health.HealthController = {
    }
}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = false
}


# Microservice specific config

mongodb {
  uri = "mongodb://localhost:27017/ers-submissions"
}

auditing {
  enabled=true
  traceRequests=true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

microservice {
  metrics {
    graphite {
      host = localhost
      port = 2003
      prefix = play.${appName}.
      enabled = true
    }
  }

  services {

    auth {
      host=localhost
      port=8500
    }

    datastream {
      host=localhost
      port=8100
    }

    ers-stub {
      host = localhost
      port = 9339
      environment=abc0
      authorization-token=XX_XXXXXa
      full-submission-url = employment-related-securities/etmpFullSubmit
    }
  }
}

scheduling {
  enabled = true
  #statuses = "saved,failed,largefiles,sent,successResubmit,failedResubmission"
  statuses=failed
  repeat-interval-sec = 30
  max-repeat-interval-sec = 10
  initial-delay-ms = 10000
  max-delay-ms = 10000
  start-hour = 7
  start-minute = 0
  end-hour = 18
  end-minute = 0
  lock-expire-min = 1
  lock-name = "ers-resubmission"
  resubmit-list-enable = true
  resubmit-list-schemeRefs = "XE1100000000000,XZ1100000000000,XD1100000000000,XK1100000000000,XB1100000000000"
  resubmit-list-statuses = "saved"
  #resubmit-list-statuses = "saved,failed,largefiles,sent,successResubmit,failedResubmission"
  resubmit-list-failStatus = failedResubmission
  resubmit-successful-status = successResubmit
  resubmit-scheme-enable = true
  resubmit-scheme = "SAYE"
  resubmit-scheme-with-nil-returns = true
  resubmit-scheme-before-date = true
  default-resubmit-start-date = 2016-04-01
  resubmit-start-date = 2016-04-01
  resubmit-end-date = 2017-06-02
}

ers-query{
  enabled = true
  schemetype=SAYE
  start-date=2016-04-01
  end-date=2017-06-02
}

settings {
  presubmission-collection = "ers-presubmission"
  metadata-collection = "ers-metadata"
}

mongo-async-driver.akka {
  log-dead-letters = off
  log-dead-letters-during-shutdown = off
}

