# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

appName=ers-submissions

# Provides an implementation of AuditConnector. Use`uk.gov.hmrc.play.audit.AuditModule or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.audit.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform backend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"
play.modules.enabled += "config.ModuleBindings"
play.modules.enabled += "config.SchedulerModule"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
# commented out because it is already provided by Bootstrap.
#play.http.secret.key="xh5rc0jtEHxeIv3A84CibewmhmpQxpq78OkxYAXeTB6metPMwClzQk7s3gTL3sqN"

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
play.i18n.langs=["en"]

ers-submissions-timeout-seconds = 70

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router=prod.Routes

play.http.parser.maxMemoryBuffer=10M

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and 
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule. 

controllers {

    com.kenshoo.play.metrics.MetricsController = {
      needsLogging = false
      needsAuditing = false
    }

    controllers.ReceivePresubmissionController = {
      needsLogging = true
      needsAuditing = false
    }

    controllers.PresubmissionController = {
      needsLogging = true
      needsAuditing = false
    }

    controllers.SubmissionController = {
        needsLogging = true
        needsAuditing = true
    }

    controllers.ResubmissionController = {
      needsLogging = true
      needsAuditing = false
    }
    uk.gov.hmrc.play.health.HealthController = {
    }
}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Microservice specific config

mongodb {
  uri = "mongodb://localhost:27017/ers-submissions"
}

auditing {
  enabled=true
}

microservice {
  metrics {
    graphite {
      enabled = true
    }
  }

  services {

    auth {
      host=localhost
      port=8500
    }

    datastream {
      host=localhost
      port=8100
    }

    ers-stub {
      host = "127.0.0.1"
      port = 9339
      environment=abc0
      authorization-token=XX_XXXXXa
      full-submission-url = employment-related-securities/etmpFullSubmit
    }
  }
}

schedules {
  resubmission-service {
      enabled               = true
      description           = "Resubmission service"
      expression            = "0_*/5_8-18_*_*_?" # run job every 5 minutes between 8-18
      lockTimeout           = 10 # how long the repository should be locked for the job to complete in seconds (releases repo upon completion of the job or on timeout expiry)
      resubmissionLimit     = 10 # how many resubmissions should be processed in a job run
      resubmit-list-statuses = "saved,failed,largefiles,sent,successResubmit,failedResubmission"
      resubmit-list-failStatus = failedResubmission
      resubmit-successful-status = successResubmit
      statuses = failed
      default-resubmit-start-date = 2016-04-01
      dateTimeFilter {
        enabled = true # indicates if dateFilter should be applied (true - records will only be resubmitted if metaData.schemaInfo.timestamp is after `dateToFilterOn`)
        filter = "1/5/2023"
      }
      schemaRefsFilter {
        enabled = false
        filter = "XE1100000000000,XZ1100000000000,XD1100000000000,XK1100000000000,XB1100000000000"
      }
      schemaFilter {
        enabled = true
        filter = "CSOP"
      }
    }
}

ers-query{
  enabled = true
  schemetype=SAYE
  start-date=2016-04-01
  end-date=2017-06-02
}

settings {
  presubmission-collection = "ers-presubmission"
  presubmission-collection-ttl-days = 548
  presubmission-collection-index-replace = true
  metadata-collection = "ers-metadata"
}

mongo-async-driver.akka {
  log-dead-letters = off
  log-dead-letters-during-shutdown = off
}

csv {
  uploadSizeLimit = 104857600
  maxGroupSize = 10000
  submitParallelism = 2
}
